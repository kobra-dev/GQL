directive @specifiedBy(url: String!) on SCALAR
type AddProjectStatus {
  id: String!
  success: Boolean!
}

type Dataset {
  id: ID!
  user: String!
  name: String!
  description: String
}

scalar DateTime

type EditProjectStatus {
  success: Boolean!
  nModified: Float!
}

type Mutation {
  addProject(
    user: String!
    name: String!
    isPublic: Boolean!
    description: String
    projectJson: String
  ): AddProjectStatus!
  editProject(
    name: String
    description: String
    isPublic: Boolean
    projectJson: String
    id: String!
  ): EditProjectStatus!
  removeProject(id: String!): EditProjectStatus!
  addDataset(newDatasetData: NewDatasetInput!): Dataset!
  editDataset(newDatasetData: NewDatasetInput!, id: Float!): Dataset!
  editDatasetContents(newContents: String!, id: Float!): Boolean!
  removeDataset(id: Float!): Boolean!
}

input NewDatasetInput {
  user: String!
  name: String!
  description: String
  b64Data: String
}

type Project {
  id: ID!
  user: String!
  name: String!
  isPublic: Boolean!
  description: String
  projectJson: String
  lastModified: DateTime!
}

type Query {
  project(id: String!): Project
  projects: [Project!]!
  getProjectsByUser(user: String!): [Project!]!
  dataset(id: Float!): Dataset!
  datasets: [Dataset!]!
  getDatasetContents(id: Float!): String!
  updates: [Update!]!
}

type Update {
  title: String!
  contents: String!
  date: DateTime!
}
